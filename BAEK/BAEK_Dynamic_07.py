# 계단 오르기
'''
규칙
1. 계단은 한번에 하나 위에 있는 계단 또는 두개 위에 있는 계단을 오를 수 있다.
2. 연속해서 세개의 계단을 밟으면 안된다.
3. 마지막 도착 계단은 반드시 밟아야 한다.

점화식을 그렸을 때 최소의 점화식은
f(0) -> 첫번째 계단을 밟는 경우
f(1) -> 첫번째 계단을 밟고 다음 계단을 밟는 경우
f(2) -> 첫번재 계단을 밟고 세번째 계단을 밟는 경우와 두번째 계단을 밟고 세번째 계단을 오른 경우 중에 최댓 값

이후의 점화식은 세개의 계단을 연속해서 밟으면 안된다에 기준을 두어 조건을 둬야 한다.
d[i - 3] + f[i - 1] + f[i], d[i - 2] + f[i]
1. 처음 계단(0) + 세번째 계단(2) + 현재의 계단(3)
2. 두번째 계단(1) + 현재의 계단(3)
중에 최대의 값을 더한다.
'''

x = int(input())
# 입력받은 점수가 있는 계단이 저장된 리스트
f = [0] * (301)
# 계단 i칸 까지 오를 때의 최댓값이 저장된 리스트
d = [0] * (301)

for i in range(x):
    f[i] = int(input())

# 첫번째 계단을 올라감
d[0] = f[0]
# 첫번째 계단을 올라가고 두번째 계단을 올라감
d[1] = f[0] + f[1]
# 두번째 계단을 올라가고 세번째 계단을 올라감, 첫번째 계단을 올라가고 네번째 계단을 올라간 것 중 에 최댓 값
d[2] = max(f[1] + f[2], f[0] + f[2])

# 다이나믹 프로그래밍 진행 (보텀업)
for i in range(3, x):
    d[i] = max(d[i - 3] + f[i - 1] + f[i], d[i - 2] + f[i])

print(d[x - 1])


